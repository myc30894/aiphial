package ml;
/**
 * The structure, representing the grid range of statmodel parameters.<br>
 * It is used for optimizing statmodel accuracy by varying model parameters,<br>
 * the accuracy estimate being computed by cross-validation.<br>
 * The grid is logarithmic, so <step> must be greater then 1.<br>
 * <i>native declaration : ml\include\ml.h:201</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a>, <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CvParamGrid extends com.ochafik.lang.jnaerator.runtime.Structure {
	/**
	 * SVM params type<br>
	 * <i>native declaration : ml\include\ml.h:204</i>
	 */
	public static final int SVM_C = 0;
	/**
	 * SVM params type<br>
	 * <i>native declaration : ml\include\ml.h:204</i>
	 */
	public static final int SVM_GAMMA = 1;
	/**
	 * SVM params type<br>
	 * <i>native declaration : ml\include\ml.h:204</i>
	 */
	public static final int SVM_P = 2;
	/**
	 * SVM params type<br>
	 * <i>native declaration : ml\include\ml.h:204</i>
	 */
	public static final int SVM_NU = 3;
	/**
	 * SVM params type<br>
	 * <i>native declaration : ml\include\ml.h:204</i>
	 */
	public static final int SVM_COEF = 4;
	/**
	 * SVM params type<br>
	 * <i>native declaration : ml\include\ml.h:204</i>
	 */
	public static final int SVM_DEGREE = 5;
	public double min_val;
	public double max_val;
	public double step;
	public CvParamGrid() {
		super();
	}
	public CvParamGrid(double min_val, double max_val, double step) {
		super();
		this.min_val = min_val;
		this.max_val = max_val;
		this.step = step;
	}
	public ByReference byReference() { return setupClone(new ByReference()); }
	public ByValue byValue() { return setupClone(new ByValue()); }
	public CvParamGrid clone() { return setupClone(new CvParamGrid()); }
	public static class ByReference extends CvParamGrid implements com.sun.jna.Structure.ByReference {}
	public static class ByValue extends CvParamGrid implements com.sun.jna.Structure.ByValue {}
}
