package cvaux;
/**
 * <i>native declaration : cvaux\include\cvaux.h:504</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a>, <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CvCamera extends com.ochafik.lang.jnaerator.runtime.Structure {
	/// size of the camera view, used during calibration
	public float[] imgSize = new float[(2)];
	/// intinsic camera parameters:  [ fx 0 cx; 0 fy cy; 0 0 1 ]
	public float[] matrix = new float[(9)];
	/**
	 * distortion coefficients - two coefficients for radial distortion<br>
	 * and another two for tangential: [ k1 k2 p1 p2 ]
	 */
	public float[] distortion = new float[(4)];
	public float[] rotMatr = new float[(9)];
	/**
	 * rotation matrix and transition vector relatively<br>
	 * to some reference point in the space.
	 */
	public float[] transVect = new float[(3)];
	public CvCamera() {
		super();
	}
	/**
	 * @param imgSize size of the camera view, used during calibration<br>
	 * @param matrix intinsic camera parameters:  [ fx 0 cx; 0 fy cy; 0 0 1 ]<br>
	 * @param distortion distortion coefficients - two coefficients for radial distortion<br>
	 * and another two for tangential: [ k1 k2 p1 p2 ]<br>
	 * @param transVect rotation matrix and transition vector relatively<br>
	 * to some reference point in the space.
	 */
	public CvCamera(float imgSize[], float matrix[], float distortion[], float rotMatr[], float transVect[]) {
		super();
		if (imgSize.length != this.imgSize.length) 
			throw new java.lang.IllegalArgumentException("Wrong array size !");
		this.imgSize = imgSize;
		if (matrix.length != this.matrix.length) 
			throw new java.lang.IllegalArgumentException("Wrong array size !");
		this.matrix = matrix;
		if (distortion.length != this.distortion.length) 
			throw new java.lang.IllegalArgumentException("Wrong array size !");
		this.distortion = distortion;
		if (rotMatr.length != this.rotMatr.length) 
			throw new java.lang.IllegalArgumentException("Wrong array size !");
		this.rotMatr = rotMatr;
		if (transVect.length != this.transVect.length) 
			throw new java.lang.IllegalArgumentException("Wrong array size !");
		this.transVect = transVect;
	}
	public ByReference byReference() { return setupClone(new ByReference()); }
	public ByValue byValue() { return setupClone(new ByValue()); }
	public CvCamera clone() { return setupClone(new CvCamera()); }
	public static class ByReference extends CvCamera implements com.sun.jna.Structure.ByReference {}
	public static class ByValue extends CvCamera implements com.sun.jna.Structure.ByValue {}
}
