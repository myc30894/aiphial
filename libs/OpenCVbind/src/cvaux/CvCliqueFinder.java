package cvaux;
/**
 * <i>native declaration : cvaux\include\cvaux.h:305</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a>, <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CvCliqueFinder extends com.ochafik.lang.jnaerator.runtime.Structure {
	public cxcore.CvGraph.ByReference graph;
	public com.sun.jna.ptr.PointerByReference adj_matr;
	/// graph size
	public int N;
	/**
	 * stacks, counters etc/<br>
	 * stack size
	 */
	public int k;
	public com.sun.jna.ptr.IntByReference current_comp;
	public com.sun.jna.ptr.PointerByReference All;
	public com.sun.jna.ptr.IntByReference ne;
	public com.sun.jna.ptr.IntByReference ce;
	/// node with minimal disconnections
	public com.sun.jna.ptr.IntByReference fixp;
	public com.sun.jna.ptr.IntByReference nod;
	/// for selected candidate
	public com.sun.jna.ptr.IntByReference s;
	public int status;
	public int best_score;
	public int weighted;
	public int weighted_edges;
	public float best_weight;
	public com.sun.jna.ptr.FloatByReference edge_weights;
	public com.sun.jna.ptr.FloatByReference vertex_weights;
	public com.sun.jna.ptr.FloatByReference cur_weight;
	public com.sun.jna.ptr.FloatByReference cand_weight;
	public CvCliqueFinder() {
		super();
	}
	public ByReference byReference() { return setupClone(new ByReference()); }
	public ByValue byValue() { return setupClone(new ByValue()); }
	public CvCliqueFinder clone() { return setupClone(new CvCliqueFinder()); }
	public static class ByReference extends CvCliqueFinder implements com.sun.jna.Structure.ByReference {}
	public static class ByValue extends CvCliqueFinder implements com.sun.jna.Structure.ByValue {}
}
