package cvaux;
/**
 * <i>native declaration : cvaux\include\cvaux.h:536</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a>, <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CvContourOrientation extends com.ochafik.lang.jnaerator.runtime.Structure {
	public float[] egvals = new float[(2)];
	public float[] egvects = new float[(4)];
	/// minimum and maximum projections
	public float max;
	/// minimum and maximum projections
	public float min;
	public int imax;
	public int imin;
	public CvContourOrientation() {
		super();
	}
	/**
	 * @param max minimum and maximum projections<br>
	 * @param min minimum and maximum projections
	 */
	public CvContourOrientation(float egvals[], float egvects[], float max, float min, int imax, int imin) {
		super();
		if (egvals.length != this.egvals.length) 
			throw new java.lang.IllegalArgumentException("Wrong array size !");
		this.egvals = egvals;
		if (egvects.length != this.egvects.length) 
			throw new java.lang.IllegalArgumentException("Wrong array size !");
		this.egvects = egvects;
		this.max = max;
		this.min = min;
		this.imax = imax;
		this.imin = imin;
	}
	public ByReference byReference() { return setupClone(new ByReference()); }
	public ByValue byValue() { return setupClone(new ByValue()); }
	public CvContourOrientation clone() { return setupClone(new CvContourOrientation()); }
	public static class ByReference extends CvContourOrientation implements com.sun.jna.Structure.ByReference {}
	public static class ByValue extends CvContourOrientation implements com.sun.jna.Structure.ByValue {}
}
