package cvaux;
/**
 * <i>native declaration : cvaux\include\cvaux.h:877</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a>, <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class Cv3dTrackerCameraInfo extends com.ochafik.lang.jnaerator.runtime.Structure {
	public byte valid;
	/// maps camera coordinates to world coordinates
	public float[] mat = new float[4 * 4];
	/// copied from intrinsics so this structure
	public cxcore.CvPoint2D32f principal_point;
	public Cv3dTrackerCameraInfo() {
		super();
	}
	/**
	 * @param mat maps camera coordinates to world coordinates<br>
	 * @param principal_point copied from intrinsics so this structure
	 */
	public Cv3dTrackerCameraInfo(byte valid, float mat[], cxcore.CvPoint2D32f principal_point) {
		super();
		this.valid = valid;
		if (mat.length != this.mat.length) 
			throw new java.lang.IllegalArgumentException("Wrong array size !");
		this.mat = mat;
		this.principal_point = principal_point;
	}
	public ByReference byReference() { return setupClone(new ByReference()); }
	public ByValue byValue() { return setupClone(new ByValue()); }
	public Cv3dTrackerCameraInfo clone() { return setupClone(new Cv3dTrackerCameraInfo()); }
	public static class ByReference extends Cv3dTrackerCameraInfo implements com.sun.jna.Structure.ByReference {}
	public static class ByValue extends Cv3dTrackerCameraInfo implements com.sun.jna.Structure.ByValue {}
}
