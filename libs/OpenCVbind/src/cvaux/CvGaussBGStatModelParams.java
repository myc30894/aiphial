package cvaux;
/**
 * <i>native declaration : cvaux\include\cvaux.h:1335</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a>, <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CvGaussBGStatModelParams extends com.ochafik.lang.jnaerator.runtime.Structure {
	/// = 1/alpha
	public int win_size;
	public int n_gauss;
	public double bg_threshold;
	public double std_threshold;
	public double minArea;
	public double weight_init;
	public double variance_init;
	public CvGaussBGStatModelParams() {
		super();
	}
	/// @param win_size = 1/alpha
	public CvGaussBGStatModelParams(int win_size, int n_gauss, double bg_threshold, double std_threshold, double minArea, double weight_init, double variance_init) {
		super();
		this.win_size = win_size;
		this.n_gauss = n_gauss;
		this.bg_threshold = bg_threshold;
		this.std_threshold = std_threshold;
		this.minArea = minArea;
		this.weight_init = weight_init;
		this.variance_init = variance_init;
	}
	public ByReference byReference() { return setupClone(new ByReference()); }
	public ByValue byValue() { return setupClone(new ByValue()); }
	public CvGaussBGStatModelParams clone() { return setupClone(new CvGaussBGStatModelParams()); }
	public static class ByReference extends CvGaussBGStatModelParams implements com.sun.jna.Structure.ByReference {}
	public static class ByValue extends CvGaussBGStatModelParams implements com.sun.jna.Structure.ByValue {}
}
