package cxcore;
/**
 * <i>native declaration : cxcore\include\cxtypes.h:1664</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a>, <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CvFileNode extends com.ochafik.lang.jnaerator.runtime.Structure {
	public int tag;
	/**
	 * type information<br>
	 * (only for user-defined object, for others it is 0)
	 */
	public cxcore.CvTypeInfo.ByReference info;
	public data_union data;
	/// <i>native declaration : cxcore\include\cxtypes.h:1669</i>
	public static class data_union extends com.ochafik.lang.jnaerator.runtime.Union {
		/// scalar floating-point number
		public double f;
		/// scalar integer number
		public int i;
		/// text string
		public cxcore.CvString str;
		/// sequence (ordered collection of file nodes)
		public cxcore.CvSeq.ByReference seq;
		/// map (collection of named file nodes)
		public cxcore.CxcoreLibrary.CvGenericHash map;
		public data_union() {
			super();
		}
		/// @param seq sequence (ordered collection of file nodes)
		public data_union(cxcore.CvSeq.ByReference seq) {
			super();
			this.seq = seq;
			setType(cxcore.CvSeq.ByReference.class);
		}
		/// @param str text string
		public data_union(cxcore.CvString str) {
			super();
			this.str = str;
			setType(cxcore.CvString.class);
		}
		/// @param i scalar integer number
		public data_union(int i) {
			super();
			this.i = i;
			setType(Integer.TYPE);
		}
		/// @param map map (collection of named file nodes)
		public data_union(cxcore.CxcoreLibrary.CvGenericHash map) {
			super();
			this.map = map;
			setType(cxcore.CxcoreLibrary.CvGenericHash.class);
		}
		/// @param f scalar floating-point number
		public data_union(double f) {
			super();
			this.f = f;
			setType(Double.TYPE);
		}
		public ByReference byReference() { return setupClone(new ByReference()); }
		public ByValue byValue() { return setupClone(new ByValue()); }
		public data_union clone() { return setupClone(new data_union()); }
		public static class ByReference extends data_union implements com.sun.jna.Structure.ByReference {}
		public static class ByValue extends data_union implements com.sun.jna.Structure.ByValue {}
	}
	public CvFileNode() {
		super();
	}
	/**
	 * @param info type information<br>
	 * (only for user-defined object, for others it is 0)
	 */
	public CvFileNode(int tag, cxcore.CvTypeInfo.ByReference info, data_union data) {
		super();
		this.tag = tag;
		this.info = info;
		this.data = data;
	}
	public ByReference byReference() { return setupClone(new ByReference()); }
	public ByValue byValue() { return setupClone(new ByValue()); }
	public CvFileNode clone() { return setupClone(new CvFileNode()); }
	public static class ByReference extends CvFileNode implements com.sun.jna.Structure.ByReference {}
	public static class ByValue extends CvFileNode implements com.sun.jna.Structure.ByValue {}
}
