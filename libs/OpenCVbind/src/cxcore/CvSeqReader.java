package cxcore;
/**
 * <i>native declaration : cxcore\include\cxtypes.h:1461</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a>, <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CvSeqReader extends com.ochafik.lang.jnaerator.runtime.Structure {
	public int header_size;
	public cxcore.CvSeq.ByReference seq;
	public cxcore.CvSeqBlock.ByReference block;
	public com.sun.jna.ptr.ByteByReference ptr;
	public com.sun.jna.ptr.ByteByReference block_min;
	public com.sun.jna.ptr.ByteByReference block_max;
	public int delta_index;
	public com.sun.jna.ptr.ByteByReference prev_elem;
	public CvSeqReader() {
		super();
	}
	public CvSeqReader(int header_size, cxcore.CvSeq.ByReference seq, cxcore.CvSeqBlock.ByReference block, com.sun.jna.ptr.ByteByReference ptr, com.sun.jna.ptr.ByteByReference block_min, com.sun.jna.ptr.ByteByReference block_max, int delta_index, com.sun.jna.ptr.ByteByReference prev_elem) {
		super();
		this.header_size = header_size;
		this.seq = seq;
		this.block = block;
		this.ptr = ptr;
		this.block_min = block_min;
		this.block_max = block_max;
		this.delta_index = delta_index;
		this.prev_elem = prev_elem;
	}
	public ByReference byReference() { return setupClone(new ByReference()); }
	public ByValue byValue() { return setupClone(new ByValue()); }
	public CvSeqReader clone() { return setupClone(new CvSeqReader()); }
	public static class ByReference extends CvSeqReader implements com.sun.jna.Structure.ByReference {}
	public static class ByValue extends CvSeqReader implements com.sun.jna.Structure.ByValue {}
}
