package highgui;
/**
 * <i>native declaration : otherlibs\highgui\gstappsink.h:18</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a>, <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class _GstAppSink extends com.ochafik.lang.jnaerator.runtime.Structure {
	/// Conversion Error : GstBaseSink
	/// < private >
	public highgui.HighguiLibrary.GstCaps caps;
	public highgui.HighguiLibrary.GCond cond;
	public highgui.HighguiLibrary.GMutex mutex;
	public highgui.HighguiLibrary.GQueue queue;
	public highgui.HighguiLibrary.GstBuffer preroll;
	/// Conversion Error : gboolean
	/// Conversion Error : gboolean
	public _GstAppSink() {
		super();
	}
	/// @param caps < private >
	public _GstAppSink(highgui.HighguiLibrary.GstCaps caps, highgui.HighguiLibrary.GCond cond, highgui.HighguiLibrary.GMutex mutex, highgui.HighguiLibrary.GQueue queue, highgui.HighguiLibrary.GstBuffer preroll) {
		super();
		this.caps = caps;
		this.cond = cond;
		this.mutex = mutex;
		this.queue = queue;
		this.preroll = preroll;
	}
	public ByReference byReference() { return setupClone(new ByReference()); }
	public ByValue byValue() { return setupClone(new ByValue()); }
	public _GstAppSink clone() { return setupClone(new _GstAppSink()); }
	public static class ByReference extends _GstAppSink implements com.sun.jna.Structure.ByReference {}
	public static class ByValue extends _GstAppSink implements com.sun.jna.Structure.ByValue {}
}
